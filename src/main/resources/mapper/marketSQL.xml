<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="market">
	<select id="selectOne" parameterType="_int" resultType="md">
select
    substr(replace(mt.member_id,substr(mt.member_id,2,2),'**'),1,instr(mt.member_id,'@',1,1)-1)as memberId,		
   	m.member_no as memberNo,
    m.member_nickname as memberNickname,
    mt.market_no as marketNo,
    mt.age,
    mt.type_code as typeCode,
    mt.sale_info as saleInfo,
    mt.gender,
    dt.type_size as typeSize,
    dt.type_name as typeName,
    to_char(mt.price,'FM999,999,999,999') as price,
    call_name as callName
from market_tbl mt join dog_type dt on(mt.type_code=dt.type_code) left join member_tbl m on (mt.member_id = m.member_id)
		where market_no = #{_parameter}
	</select>
	<select id="marketListCnt" parameterType="md" resultType="int">
		select count(type_code)
		
		from market_tbl join dog_type using(type_code)
		<choose>
		<when test="typeSize==-1">
		</when>
		<otherwise>
		where type_size = #{typeSize}
		</otherwise>
		</choose>
	</select>
	<select id="filterSelect" parameterType="md" resultType="md">
		select
			mt.market_no as marketNo,
			mt.call_name as callName,
			mt.age,
			mt.type_code as typeCode,
			mt.sale_info as saleInfo,
			mt.gender,
			dt.type_size as typeSize,
			dt.type_name as typeName,
			to_char(mt.price,'FM999,999,999,999') as price
		from market_tbl mt join dog_type dt on(mt.type_code=dt.type_code)
		<choose>
		<when test="typeSize==-1">
		</when>
		<otherwise>
		where type_size = #{typeSize}
		</otherwise>
		</choose>		
		 order by 1 desc
	</select>	
	<select id="selectTypeList" resultType="dt">
		select
			type_code as typeCode,
			type_name as typeName,
			type_size as typeSize
		from dog_type
	</select>
	<select id="selectMaxSeq" resultType="int">
		select 
			max(market_no)
		from market_tbl
	</select>
	<insert id="inputMarket" parameterType="md">
		insert into market_tbl values(
		market_seq.nextval,
		#{age},
		#{typeCode},
		#{saleInfo},
		#{gender},
		#{price},
		#{memberId},
		#{callName}
		)
	</insert>
	<insert id="inputFile" parameterType="mdf">
		insert into market_file_tbl values(#{marketNo},file_seq.nextval,#{fileName},#{filePath},#{fileProcedure})
	</insert>
	
	<select id="selectFile" resultType="mdf">
		select
			market_no as marketNo,
			file_name as fileName,
			file_path as filePath,
			file_procedure as fileProcedure
		from market_file_tbl order by file_procedure
	</select>
	<select id="selectNoFile" resultType="mdf">
		select
			file_no as fileNo,
			market_no as marketNo,
			file_name as fileName,
			file_path as filePath,
			file_procedure as fileProcedure
		from market_file_tbl
		where market_no = #{_parameter} order by file_procedure
	</select>
	<select id="myMarketList" parameterType="m" resultType="md">
		select
			mt.market_no as marketNo,
			mt.age,
			mt.type_code as typeCode,
			mt.sale_info as saleInfo,
			mt.gender,
			dt.type_size as typeSize,
			dt.type_name as typeName,
			to_char(mt.price,'FM999,999,999,999') as price,
			call_name as callName
		from market_tbl mt join dog_type dt on(mt.type_code=dt.type_code)
		 where member_id = #{memberId}
		order by 1 desc
	</select>
	<update id="updateMarket" parameterType="md">	
		update market_tbl set
			gender=#{gender},
			age=#{age},
			price=#{price},
			type_code = #{typeCode},
			sale_info = #{saleInfo}
		where market_no = #{marketNo}		 
	</update>
	
	<delete id="deleteFile" parameterType="Integer">
		delete from market_file_tbl
		where file_no = #{_parameter}
	</delete>
	<select id="deleteMarket">
		delete from market_tbl where market_no = #{_parameter}
	</select>
	<select id="selectFileName" resultType="mdf">
		select 
		    file_no as fileNo,
		    file_name as fileName,
		    file_path as filePath,
		    file_procedure as fileProcedure
		from market_file_tbl
		where market_no = #{_parameter}
	</select>
</mapper>
