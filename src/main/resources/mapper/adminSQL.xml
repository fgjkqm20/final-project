<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
<!-- 전체 게시물 수  -->
<select id="adminQnaCount" resultType="_int">
	select count(*) from qna_tbl
</select>
<!-- 문의내역 더보기 -->
<select id="moreAdminQna" parameterType="map" resultType="aq">
select
	qna_no as qnaNo,
	substr(replace(qna_writer,substr(qna_writer,2,2),'**'),1,instr(qna_writer,'@',1,1)-1)as qnaWriter,
	qna_title as qnaTitle,
	qna_content as qnaContent,
	qna_views as qnaViews,
	qna_date as qnaDate,
	qna_cate_no as qnaCateNo,
	qna_status as qnaStatus
from(select rownum as rnum, q.* from(select * from qna_tbl order by 1 desc)q) where rnum between #{start} and #{end}
</select>
<!-- 문의내역 검색 -->
<select id="searchAdminQna" parameterType="aq" resultType="aq">
select
	qna_no as qnaNo,
		substr(replace(qna_writer,substr(qna_writer,2,2),'**'),1,instr(qna_writer,'@',1,1)-1)as qnaWriter,
		qna_title as qnaTitle,
		qna_content as qnaContent,
		qna_views as qnaViews,
		qna_date as qnaDate,
		qna_cate_no as qnaCateNo,
		qna_status as qnaStatus
	from qna_tbl
	<choose>
		<when test="searchType.equals('nonAnswer')">
			where qna_status = 0
		</when>
		<when test="searchType.equals('answer')">
			where qna_status = 1
		</when>
		<when test="searchType.equals('qnaType')">
			where qna_cate_no like '%'||#{keyword}||'%'
		</when>
		<when test="searchType.equals('qnaWriter')">
			where qna_writer like '%'||#{keyword}||'%'
		</when>
	</choose>
</select>
<!-- 신고하기 총 게시물 수  -->
<select id="adminReportCount" resultType="_int">
	select count(*) from report_tbl
</select>
<!-- 신고하기 리스트 더보기  -->
<select id="moreAdminReport" parameterType="map" resultType="ar">
	select 
		report_no as reportNo,
		report_member_no as reportMemberNo,
		report_member_nickname as reportMemberNickname,
		reported_member_no as reportedMemberNo,
		reported_member_nickname as reportedMemberNickname,
		report_type as reportType,
		report_content as reportContent,
		report_date as reportDate,
		report_status as reportStatus,
		reportCount
	from (select rownum as rnum, r.* from(select * from report_tbl order by 1 desc)r)
	join (select count(reported_member_no)as reportCount,
		reported_member_no
		from report_tbl
		group by reported_member_no, report_member_nickname
	)
	using (reported_member_no)
    where rnum between #{start} and #{end}
</select>
<!-- 신고처리 회원 등급 업데이트 -->
<update id="updateReportMemberLevel" parameterType="ar">
	update member_tbl set
	<choose>
	<when test="optionVal == 1">
		member_level = 3
	</when>
	<when test="optionVal == 2">
		member_level = 4
	</when>
	</choose>
	where member_no = #{reportedMemberNo}
</update>
<!-- 신고처리 상태 업데이트  -->
<update id="updateReportStatus" parameterType="ar">
	update report_tbl set
	report_status = 1
	where report_member_no = #{reportMemberNo} and reported_member_no = #{reportedMemberNo}
</update>
<!-- 회원리스트 전체 갯수 조회-->
<select id="adminMemberListCount" resultType="_int">
	select count(*) from member_tbl
</select>
<!-- 회원리스트 더보기 -->
<select id="moreAdminMemberList" resultType="m" parameterType="map">
select
	member_no as memberNo,
	member_id as memberId,
	member_nickname as memberNickname,
	enroll_date as enrollDate,
	member_level as memberLevel
from(select rownum as rnum, m.* from(select * from member_tbl order by 1 desc)m) where rnum between #{start} and #{end}
</select>
<!-- 회원 등급 변경 버튼 -->
<update id="updateMemberLevel" parameterType="m">
	update member_tbl set
	<choose>
	<when test="optionVal == 1">
	member_level = 1
	</when>
	<when test="optionVal == 3">
	member_level = 3
	</when>
	<when test="optionVal == 4">
	member_level = 4
	</when>
	</choose>
	where member_no = #{memberNo}
</update>
</mapper>
